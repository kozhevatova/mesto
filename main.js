(()=>{var e={766:e=>{e.exports='<!DOCTYPE html> <html lang="ru"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <meta name="description" content="Сервис Mesto с возможностью добавления \n        и удаления фотографий и лайков."> <meta name="author" content="Анна Кожеватова"> <title>Сервис Mesto</title> </head> <body class="page"> <div class="page__container"> <header class="header"> <div class="header__logo"></div> </header> <main class="content"> <section class="profile"> <div class="profile__avatar"> <button class="profile__edit-avatar-button"></button> </div> <div class="profile__info"> <div class="profile__title"> <h1 class="profile__name">Жак-Ив Кусто</h1> <button class="profile__edit-button" type="button" aria-label="Редактировать профиль."></button> </div> <p class="profile__subtitle">Исследователь океана</p> </div> <button class="profile__add-button" type="button" aria-label="Добавить фотографию."></button> </section> <div> <ul class="elements"> </ul> </div> </main> <footer class="footer"> <p class="footer__copyright">&copy; 2020 Mesto Russia</p> </footer> <div class="popup popup_type_edit-form"> <form class="popup__form" method="POST" name="editForm"> <button class="popup__close-button" type="reset" aria-label="Закрыть форму редактирования."></button> <h3 class="popup__title">Редактировать профиль</h3> <input type="text" class="popup__input popup__name" name="popupName" placeholder="Имя" required id="name-input" minlength="2" maxlength="40"> <span class="popup__input-error" id="name-input-error"></span> <input type="text" class="popup__input popup__description" name="popupDescription" placeholder="О себе" required id="description-input" minlength="2" maxlength="200"> <span class="popup__input-error" id="description-input-error"></span> <button disabled="disabled" type="submit" class="popup__save-button popup__button popup__button_disabled">Сохранить</button> </form> </div> <div class="popup popup_type_add-form"> <form class="popup__form" method="POST" name="addForm"> <button class="popup__close-button" type="reset" aria-label="Закрыть форму добавления фотографий."></button> <h3 class="popup__title">Новое место</h3> <input type="text" class="popup__input popup__name" name="popupName" placeholder="Название" required id="title-input" minlength="2" maxlength="30"> <span class="popup__input-error" id="title-input-error"></span> <input type="url" class="popup__input popup__description" name="popupDescription" placeholder="Ссылка на картинку" required id="url-input"> <span class="popup__input-error" id="url-input-error"></span> <button type="submit" class="popup__save-button popup__button popup__button_disabled">Создать</button> </form> </div> <div class="popup popup_type_zoomed-image"> <div class="popup__form popup__form_type_zoomed-image"> <img src="#" alt="Фотография." class="popup__image"> <p class="popup__name popup__name_place_zoomed-image"></p> <button class="popup__close-button" type="reset"></button> </div> </div> <div class="popup popup_type_delete-confirm"> <form class="popup__form popup__form_type_delete-confirm" name="deleteConfirmForm"> <button class="popup__close-button" type="reset" aria-label="Закрыть форму подтверждения удаления."></button> <h3 class="popup__title">Вы уверены?</h3> <button type="submit" class="popup__save-button popup__button">Да</button> </form> </div> <div class="popup popup_type_edit-avatar-form"> <form class="popup__form popup__form_type_edit-avatar" name="editAvatarForm"> <button class="popup__close-button" type="reset" aria-label="Закрыть форму редактирования аватара."></button> <h3 class="popup__title">Обновить аватар</h3> <input type="url" class="popup__input popup__description" name="avatarUrl" placeholder="Ссылка на аватар" required id="url-input"> <span class="popup__input-error" id="url-input-error"></span> <button type="submit" class="popup__save-button popup__button popup__button_disabled">Сохранить</button> </form> </div> </div> <template id="element-template" class="element-template"> <li class="element"> <img alt="Фотография." class="element__image"> <div class="element__title"> <h2 class="element__place-name"></h2> <div class="element__like-container"> <button class="element__like" type="button" aria-label="Поставить лайк."></button> <p class="element__like-num"></p> </div> </div> <button class="element__delete-button" type="button" aria-label="Удалить фото."></button> </li> </template> </body> </html>'}},t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={exports:{}};return e[o](r,r.exports,n),r.exports}(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o){var r=n.handleCardClick,i=n.handleLikeAdd,a=n.handleLikeDelete,u=n.handleCardDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._data=e,this._cardSelector=o,this._handleCardClick=r,this._handleLikeAdd=i,this._handleLikeDelete=a,this._handleCardDelete=u}var n,o;return n=t,(o=[{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__like").addEventListener("click",(function(t){e._handleLikeClicked(t)})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(t){e._handleCardDelete()})),this._element.querySelector(".element__image").addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}},{key:"removeCard",value:function(){this._element.remove()}},{key:"disableDelete",value:function(){this._element.querySelector(".element__delete-button").remove()}},{key:"_handleLikeClicked",value:function(){this.likeElement=this._element.querySelector(".element__like"),this.likeElement.classList.contains("element__like_active")?this._handleLikeDelete():this._handleLikeAdd()}},{key:"showLikes",value:function(e){this._element.querySelector(".element__like-num").textContent=e}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__place-name").textContent=this._name,this._element.querySelector(".element__like-num").textContent=this._likes.length,this._setEventListeners(),this._element}}])&&e(n.prototype,o),t}();function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._errorSelector=t.errorSelector,this._formElement=n,this._button=n.querySelector(t.submitButtonSelector),this._inputList=Array.from(n.querySelectorAll(t.inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_enableButton",value:function(){this._button.classList.remove(this._inactiveButtonClass),this._button.removeAttribute("disabled")}},{key:"_disableButton",value:function(){this._button.classList.add(this._inactiveButtonClass),this._button.setAttribute("disabled","true")}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_handleReset",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListenersForReset",value:function(){var e=this;this._formElement.addEventListener("reset",(function(){e._handleReset()}))}},{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))})),this._setEventListenersForReset()}}])&&o(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var a=function(){function e(t){var n=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(n),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&null!=this._popup&&this.close()}},{key:"_closePopupByClickOnOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){e._closePopupByClickOnOverlay(t)}))}}])&&i(t.prototype,n),e}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(o);if(r){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._zoomedImage=t._popup.querySelector(".popup__image"),t._nameOfZoomedImage=t._popup.querySelector(".popup__name_place_zoomed-image"),t}return t=a,(n=[{key:"open",value:function(e,t){s(f(a.prototype),"open",this).call(this),this._nameOfZoomedImage.textContent=t,this._zoomedImage.src=e}}])&&l(t.prototype,n),a}(a);function d(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var h=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"prependItem",value:function(e){this._container.prepend(e)}},{key:"appendItem",value:function(e){this._container.append(e)}}])&&d(t.prototype,n),e}();function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(o);if(r){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){var t,n=e.popupSelector,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._handleFormSubmit=o,t.form=t._popup.querySelector(".popup__form"),t._inputList=t.form.querySelectorAll(".popup__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;v(k(a.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){e._handleFormSubmit(t,e._getInputValues())}))}},{key:"close",value:function(){v(k(a.prototype),"close",this).call(this),this.form.reset()}}])&&y(t.prototype,n),a}(a);function E(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var w=function(){function e(t){var n=t.nameSelector,o=t.infoSelector,r=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._info=document.querySelector(o),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._data={name:this._name.textContent,info:this._info.textContent,avatar:this._avatar.src,id:this.id},this._data}},{key:"setUserInfo",value:function(e,t,n,o){this._name.textContent=e,this._info.textContent=t,this._avatar.style.background="center/cover url(".concat(n,") no-repeat"),this.id=o}}])&&E(t.prototype,n),e}(),C=document.querySelector(".page"),L=C.querySelector(".profile__edit-button"),O=C.querySelector(".profile__add-button"),q=C.querySelector(".popup_type_edit-form"),D=C.querySelector(".popup_type_add-form"),I=C.querySelector(".popup_type_edit-avatar-form"),P=q.querySelector(".popup__name"),R=q.querySelector(".popup__description"),j=C.querySelector(".profile__edit-avatar-button"),x=q.querySelector(".popup__save-button"),T=D.querySelector(".popup__save-button"),U=I.querySelector(".popup__save-button"),A={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",errorSelector:".popup__input-error"};function B(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}n(766);var F=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject(new Error("Ошибка: ".concat(e.status)))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"editUserInfo",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return n._getResponseData(e)}))}},{key:"addNewCard",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers,method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(e){return n._getResponseData(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{headers:this.headers,method:"PUT"}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{headers:this.headers,method:"DELETE"}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{headers:this.headers,method:"DELETE"}).then((function(e){return t._getResponseData(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return t._getResponseData(e)}))}}])&&B(t.prototype,n),e}();function N(e){return(N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function V(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function z(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function M(e,t,n){return(M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Z(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function H(e,t){return(H=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function J(e,t){return!t||"object"!==N(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Z(e){return(Z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&H(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Z(o);if(r){var n=Z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return J(this,e)});function a(){return V(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){M(Z(a.prototype),"open",this).call(this),this.itemElementToDelete=e,this.itemId=t}},{key:"setEventListeners",value:function(){var e=this;M(Z(a.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){e._handleFormSubmit(t)}))}}])&&z(t.prototype,n),a}(S),$=function(e,t,n){e.text=t?"Сохранение...":n};function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var K=new w({nameSelector:".profile__name",infoSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),Q=new _({popupSelector:".popup_type_zoomed-image"});Q.setEventListeners();var W=new F({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"b1b736c3-ab37-40d8-99c3-eedcbb719e9d","Content-Type":"application/json"}});Promise.all([W.getUserInfo(),W.getInitialCards()]).then((function(e){var t,n,o=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(o=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==u.return||u.return()}finally{if(r)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[0],i=o[1];K.setUserInfo(r.name,r.about,r.avatar,r._id),ee.renderItems(i)})).catch((function(e){console.log(e)}));var X=function(e){var n=new t(e,{handleCardClick:function(e,t){Q.open(e,t)},handleLikeAdd:function(){W.addLike(e._id).then((function(e){n.likeElement.classList.add("element__like_active"),n.showLikes(e.likes.length)})).catch((function(e){console.log(e)}))},handleLikeDelete:function(){W.deleteLike(e._id).then((function(e){n.likeElement.classList.remove("element__like_active"),n.showLikes(e.likes.length)})).catch((function(e){console.log(e)}))},handleCardDelete:function(){oe.open(n,e._id)}},".element-template"),o=n.generateCard();return n._data.owner._id!==K.getUserInfo().id&&n.disableDelete(),o},ee=new h({renderer:function(e){var t;t=X(e),ee.appendItem(t)}},".elements"),te=new S({popupSelector:".popup_type_edit-form",handleFormSubmit:function(e,t){e.preventDefault(),$(x,!0,"Сохранить"),W.editUserInfo(t.popupName,t.popupDescription).then((function(e){K.setUserInfo(e.name,e.about,e.avatar,e._id)})).then((function(){te.close()})).catch((function(e){console.log(e)})).finally((function(){$(x,!1,"Сохранить")}))}}),ne=new S({popupSelector:".popup_type_add-form",handleFormSubmit:function(e,t){e.preventDefault(),$(T,!0,"Создать"),W.addNewCard(t.popupName,t.popupDescription).then((function(e){var t;t=X(e),ee.prependItem(t),console.log(T.text)})).then((function(){ne.close()})).catch((function(e){console.log(e)})).finally((function(){$(T,!1,"Создать")}))}}),oe=new Y({popupSelector:".popup_type_delete-confirm",handleFormSubmit:function(e){e.preventDefault(),W.deleteCard(oe.itemId).then((function(){oe.itemElementToDelete.removeCard()})).then((function(){oe.close()})).catch((function(e){console.log(e)}))}}),re=new S({popupSelector:".popup_type_edit-avatar-form",handleFormSubmit:function(e,t){e.preventDefault(),$(U,!0,"Сохранить"),W.editAvatar(t.avatarUrl).then((function(e){K.setUserInfo(e.name,e.about,e.avatar,e._id)})).then((function(){re.close()})).catch((function(e){console.log(e)})).finally((function(){$(U,!1,"Сохранить")}))}}),ie=function(e){var t=new r(A,e.form);return t.enableValidation(),t},ae=ie(ne),ue=ie(te),le=ie(re);te.setEventListeners(),ne.setEventListeners(),oe.setEventListeners(),re.setEventListeners(),L.addEventListener("click",(function(){ue.toggleButtonState();var e=K.getUserInfo();P.value=e.name,R.value=e.info,te.open()})),O.addEventListener("click",(function(){ae.toggleButtonState(),ne.open()})),j.addEventListener("click",(function(){le.toggleButtonState(),re.open()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,